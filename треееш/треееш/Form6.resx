<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Gnc2Wv1EV3Ehrx+qoujTuPPQuie6igvZeqhKo0/jzkArnugqLuQ9h6pA+jTu2LTWia7iQt55qMqkT+Oe
        pMlfp9fjQt5/qIqlT+NW0ISdaBG4kE8dqpLp07iHNHQnWgQu5LOHqnD6NK5FI/ajdeBCvnGoyqdP40q6
        tx+tAxfyvUNVRH0aN9HVia4CG3w7I8Xbp3Hkjg/YJyMl3FePGScCW+yZkUJeR3OADfbPSDkv0Whgg0Nk
        pKIf0lBggwNlpK47NAjY4HAZqe6KbgMbHDQjNZ7RDWCDQ2ek0mkdb0JJMELuMELuMELuMELuMELuMELu
        MELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELu
        MELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELu
        MELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELu
        MELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELu
        MELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELu
        MELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELuMELu
        MELusPHv3//qeh+kGngfCwAAAABJRU5ErkJggg==
</value>
  </data>
</root>